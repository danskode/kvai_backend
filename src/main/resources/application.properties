spring.application.name=kvai_backend

# Openai ? if needed ...
#spring.ai.openai.api-key=${OPENAI_TOKEN}
#spring.ai.openai.chat.base-url=https://api.openai.com/v1/
#spring.ai.openai.model=gpt-4o
#spring.ai.openai.embedding.model=text-embedding-ada-002
#spring.ai.openai.max-tokens=50
#spring.ai.openai.temperature=0.0


# Spring AI LLM - check which model you use ...
spring.ai.ollama.init.pull-model-strategy=when_missing
spring.ai.ollama.chat.model=gemma3:12b
spring.ai.ollama.chat.options.model=gemma3:12b
# If local use http://localhost:11434
spring.ai.ollama.base-url=http://localhost:11434
#spring.ai.openai.chat.base-url=http://localhost:11434
# if docker ollama use :12434!!!
#spring.ai.ollama.base-url=http://host.docker.internal:12434
spring.ai.ollama.chat.options.temperature=0.0
spring.ai.ollama.embedding.model=nomic-embed-text

# PGVector config for Spring AI? Makes the schema automatically in Postgresql ... and drops it ? first line
spring.ai.vectorstore.pgvector.remove-existing-vector-store-table=true
spring.ai.vectorstore.pgvector.initialize-schema=true

# Activate docker compose ? and tells which folder the file is in ...
spring.docker.compose.enabled=true
spring.docker.compose.file=./docker/docker-compose.yml

# Datasource properties
spring.datasource.url=${PGVECTOR_URI}
spring.datasource.username=${PGVECTOR_USER}
spring.datasource.password=${PGVECTOR_PASSWORD}

logging.level.kea.sofie.kvai_backend=DEBUG