spring.application.name=kvai_backend

# Openai
#spring.ai.openai.api-key=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
#spring.ai.openai.chat.base-url=https://api.openai.com/v1/
#spring.ai.openai.model=gpt-4
#spring.ai.openai.embedding.model=text-embedding-ada-002
#spring.ai.openai.max-tokens=150
#spring.ai.openai.temperature=0.0


# Spring AI LLM
spring.ai.ollama.init.pull-model-strategy=when_missing
spring.ai.ollama.chat.model=gemma3:4b
spring.ai.ollama.base-url=http://localhost:11434
spring.ai.openai.enabled=false
spring.ai.ollama.embedding.model=nomic-embed-text

# PGVector config til Spring AI ? Lav et schema automatisk i vektordatabasen
spring.ai.vectorstore.pgvector.initialize-schema=true

# Aktiver docker compose
spring.docker.compose.enabled=true
spring.docker.compose.file=./docker/docker-compose.yml

# Datasource properties
spring.datasource.url=${PGVECTOR_URI}
spring.datasource.username=${PGVECTOR_USER}
spring.datasource.password=${PGVECTOR_PASSWORD}


#spring.datasource.url=${PGVECTOR_URI}
#spring.datasource.username=${PGVECTOR_USER}
#spring.datasource.password=${PGVECTOR_PASSWORD}
#spring.datasource.hikari.maximum-pool-size=10